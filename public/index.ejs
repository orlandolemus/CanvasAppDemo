<!DOCTYPE html>
<html>
<head>
  <title>Canvas App</title>
  <script src="/canvas-all.js"></script>
  <script>
      
        const client = <%- JSON.stringify(context.client) %>;
        console.log("CLIENT: ", client);

        function checkCanvasPublisherAvailability() {
          const canvasAvailable = (
            typeof Sfdc !== 'undefined' &&
            Sfdc.canvas &&
            Sfdc.canvas.client &&
            typeof Sfdc.canvas.client.publish === 'function'
          );

          if (!canvasAvailable) {
            const btn = document.getElementById('sendEventBtn');
            if (btn) {
              btn.disabled = true;
              btn.innerText = 'Unavailable outside Salesforce Canvas';
              btn.style.backgroundColor = '#ccc';
              btn.style.cursor = 'not-allowed';
            }

            const msg = document.getElementById('canvasStatus');
            if (msg) {
              msg.innerHTML = '<strong style="color:red;">Canvas SDK not fully available.</strong><br>This page must be loaded inside Salesforce as a Canvas App.';
            }
          }

          return canvasAvailable;
        }

        function sendCanvasEvent() {
          if (!checkCanvasPublisherAvailability()) return;

          const client = <%- JSON.stringify(context.client) %>;
          console.log("CLIENT: ", client);

            Sfdc.canvas.client.publish(client, {
              name: 'customEventFromCanvas',
              payload: {
                message: 'Hello from Canvas!',
                time: new Date().toISOString()
              }
            });
        }

        function subscribeToAuraEvents() {
          if (
            typeof Sfdc !== 'undefined' &&
            Sfdc.canvas &&
            Sfdc.canvas.client &&
            typeof Sfdc.canvas.client.subscribe === 'function'
          ) {
              Sfdc.canvas.client.subscribe({ name: 'eventFromAura' }, function(event) {
                const msg = document.getElementById('auraMsg');
                if (msg) {
                  msg.innerText = 'Aura says: ' + event.payload.message;
                }
              });
          }
        }

        window.onload = function () {
          checkCanvasPublisherAvailability();
          subscribeToAuraEvents();
        };
      
  </script>
</head>
<body>
  <h1>Salesforce Canvas App</h1>
  <p id="canvasStatus">Canvas SDK loaded</p>
  <button id="sendEventBtn" onclick="sendCanvasEvent()">Send Event to Salesforce</button>
  <hr>
  <p><strong>Status from Aura:</strong></p>
  <p id="auraMsg">Waiting for message from Aura...</p>
</body>
</html>
